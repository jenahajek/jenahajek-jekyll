// stale bych chtel sjednotit nazvoslovi nadpisu. Bude ale asi lepsi pockat, nez jak se to vyvrbi a pak to zkultivovat. Jako cesticky pres travu na sidlistich...



@mixin ff--heading {
    font-family: proxima-nova, "chaparral-pro-display", georgia, sans-serif;
    // font-style: italic;
    // font-weight: 300;
}

@mixin ff--body {
    font-family: proxima-nova, "chaparral-pro", georgia, sans-serif;
    font-style: normal;
    font-weight: 400;
}





// --------------------------
// Base typographic styles
// --------------------------

// Define your base font-size here; most elements will inherit this.
html,
body {
    @include ff--body;
}

// Common margin-bottom for vertical rhythm.
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
fieldset,
p,
table,
pre,
.baseline,
svg text {
    margin-bottom: 0;
    margin-top: 0;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -moz-font-feature-settings: "liga" on;
    font-weight: 400;
}

h1, h2, h3, h4, h5, h6 {
    @include type-setting(1);
}





// --------------------------
// Base typographic scale
// --------------------------
// there is a type scale map in config.scss





// --------------------------
// Custom typographic styles
// --------------------------
@mixin huge-type {
    @include ff--heading;
    @include type-setting(3);
    line-height: 1.1;
    // text-shadow: 0 1px 0 rgba(255, 255, 255, 0.4);

    @include respond-to(large) {
        line-height: 1.1;
        font-size: 6.5vw;
        margin: ($vr * 4) 0 ($vr / 2);
    }
}

@mixin perex {
    @include type-setting(1);
    line-height: 1.5;
    font-style: italic;
}

@mixin section__heading {
    @include ff--body;
    @include type-setting(2);
    font-weight: bold;
    font-style: normal;
}

//------------------------------------------



.huge-type {
    @include huge-type;
}

.scope .perex,
.perex {
    @include perex;
}

.section__heading {
    @include section__heading;
}




p {
    @include type-setting(0);
    letter-spacing: 0.4px;
}

input, form, textarea {
    @include ff--body;
}

// --------------------------
// Scope
// --------------------------
// - for user generated content (where adding classes would de difficult) we
//   mark only container and then style headings with nesting
.article,
.scope {
    h1 {
        // @include type-setting(3);
    }

    h2 {
        @include type-setting(2);
        margin-top: ($vr * 3);
        margin-bottom: $vr;
    }

    h3 {
        @include type-setting(1);
    }

    h4 {
        margin-bottom: ($vr / 2);
    }

    a {
        @include link-underline();
    }

    p {
        @include type-setting(0);
        margin-bottom: $vr;
    }

    code {
        @include type-setting(-1);
        background: palette(primary, light);
        border-radius: 3px;
        padding: 4px 4px 2px;
    }

    pre {
        @include type-setting(0);
        background: palette(primary, x-dark);
        color: white;
        border-radius: 5px;
        padding: ($vr / 2) $vr;
        margin: 0 ($vr / -1) $vr;

        code {
            background: none;
            padding: 0;
        }
    }

    blockquote {
        color: palette(gray, dark);
        font-style: italic;
        @include type-setting(1);
    }

    ol {
        line-height: 1.6;
        margin-bottom: $vr;
        padding-left: 1rem;

        @include respond-to(medium) {
            padding-left: 0;
        }

        ol {
            margin-bottom: ($vr / 2);
            padding-left: $vr;
        }
    }

    ul {
        line-height: 1.6;
        margin-bottom: $vr;
        list-style-type: none;
        padding-left: 1rem;

        @include respond-to(medium) {
            padding-left: 0;
        }

        ul {
            margin-bottom: ($vr / 2);
            padding-left: $vr;
        }

        li {
        position: relative;

            &:before {
                content: '';
                background: palette(primary);
                width: 6px;
                height: 6px;
                display: block;
                position: absolute;
                left: -18px;
                top: 13px;
                transform: rotate(45deg);
            }
        }
    }


    // --------------------------
    // Horizontal rule
    // --------------------------
    hr {
        display: block;
        clear: both;
        margin: ($vr * 1.5) ($vr * -1.5);
        border: 0;
        height: 1px;
        background: palette(gray, light);
    }
}
